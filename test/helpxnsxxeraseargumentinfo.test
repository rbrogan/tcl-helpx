package require tcltest
package require helpx 0.2

::tcltest::test HelpxNS::EraseArgumentInfo-0 {Basic test}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::EraseArgumentInfo SampleCommand 0
puts [HelpxNS::ArgumentInfoFor SampleCommand]
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {}  -output {Arg2 {The second argument.}
}  -returnCodes {0}  


::tcltest::test HelpxNS::EraseArgumentInfo-3 {Position empty}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::EraseArgumentInfo SampleCommand {}
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {Variable Position has empty value.}  -output {}  -returnCodes {1}  


::tcltest::test HelpxNS::EraseArgumentInfo-4 {No such position}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::EraseArgumentInfo SampleCommand 3
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {Input value 3 is out-of-range.}  -output {}  -returnCodes {1}  


::tcltest::test HelpxNS::EraseArgumentInfo-5 {Erase one and only}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::CreateCommand TempCommand
HelpxNS::EnterArgumentInfo TempCommand Arg1 {My Description.}
puts [HelpxNS::ArgumentInfoFor TempCommand]
HelpxNS::EraseArgumentInfo TempCommand 0
puts "*[HelpxNS::ArgumentInfoFor TempCommand]*"
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {}  -output {Arg1 {My Description.}
**
}  -returnCodes {0}  


::tcltest::test HelpxNS::EraseArgumentInfo-6 {Erase first}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::EraseArgumentInfo SampleCommand 0
puts [HelpxNS::ArgumentInfoFor SampleCommand]
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {}  -output {Arg2 {The second argument.}
}  -returnCodes {0}  


::tcltest::test HelpxNS::EraseArgumentInfo-7 {Erase last}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::EraseArgumentInfo SampleCommand 1
puts [HelpxNS::ArgumentInfoFor SampleCommand]
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {}  -output {Arg1 {The first argument.}
}  -returnCodes {0}  


::tcltest::test HelpxNS::EraseArgumentInfo-8 {Second use}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::EraseArgumentInfo SampleCommand 0
puts [HelpxNS::ArgumentInfoFor SampleCommand]
HelpxNS::EraseArgumentInfo SampleCommand 0
puts "*[HelpxNS::ArgumentInfoFor SampleCommand]*"
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {}  -output {Arg2 {The second argument.}
**
}  -returnCodes {0}  


::tcltest::test HelpxNS::EraseArgumentInfo-9 {Position is not non-negative integer}  -setup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
sqlite3 test-helpx-3-db ./test-helpx-3.db
HelpxNS::RegisterDatabase test-helpx-3-db
set GenNS::DatabaseName test-helpx-3-db
}  -body {HelpxNS::EraseArgumentInfo SampleCommand asdf
}  -cleanup {file copy -force ./test-helpx-3.bak ./test-helpx-3.db
}  -result {Variable Position has invalid value asdf.}  -output {}  -returnCodes {1}  


